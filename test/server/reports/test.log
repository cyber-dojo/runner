Run options: --seed 14029

# Running:

........................................................................................................................

Finished in 82.497752s, 1.4546 runs/s, 286.4563 assertions/s.

120 runs, 23632 assertions, 0 failures, 0 errors, 0 skips
Coverage report generated for MiniTest to //tmp/reports. 6899 / 13543 LOC (50.94%) covered.

Slowest 25 tests are...
6.8388 - 7B79DB - Alpine - C#, NUnit - red/amber/green traffic-light, clean log - feature_traffic_light_test.rb:20
5.5707 - 7B79DB - Ubuntu - VisualBasic, NUnit - red/amber/green traffic-light, clean log - feature_traffic_light_test.rb:20
4.2254 - 1598A6 - Ubuntu - VisualBasic, NUnit - baseline average speed is less than 1.7 secs, locally much faster than that, but for CI 1.7 is about right - feature_baseline_speed_test.rb:12
4.0050 - 1598A6 - Alpine - C#, NUnit - baseline average speed is less than 1.7 secs, locally much faster than that, but for CI 1.7 is about right - feature_baseline_speed_test.rb:12
3.4928 - 1B5CD5 - Debian - C (gcc), assert - fork-bomb does not run indefinitely - feature_robustness_test.rb:12
3.1218 - 9E94D7 - Debian - C (gcc), assert - when run_cyber_dojo_sh does not complete in max_seconds (not producing output) - feature_timed_out_test.rb:38
3.0736 - 6f2dFA - Alpine - C#, NUnit - log_empty? helper method ignores known circleci warning - log_empty_test.rb:12
3.0306 - E4A52B - Alpine - C#, NUnit - source files bigger than 10K are not truncated - feature_large_file_truncation_test.rb:28
2.9441 - 9E9B2B - Debian - C (gcc), assert - when run_cyber_dojo_sh does not complete in max_seconds (producing output) - feature_timed_out_test.rb:12
2.8782 - 1B5CD6 - Ubuntu - VisualBasic, NUnit - bash fork-bomb does not run indefinitely - feature_robustness_test.rb:46
2.8670 - 1B5CD6 - Alpine - C#, NUnit - bash fork-bomb does not run indefinitely - feature_robustness_test.rb:46
2.4978 - 1B5DB3 - Debian - C (gcc), assert - file-handles quickly become exhausted - feature_robustness_test.rb:74
2.4624 - D280BB - Ubuntu - C (clang), assert - clang sanitize address => no ulimit on data - feature_clang_sanitize_address_test.rb:12
1.8857 - D8D12B - Alpine - C#, NUnit - cyber-dojo.sh can create files in sandbox/ sub-dirs - feature_sandbox_sub_dir_test.rb:21
1.8154 - D8D12A - Alpine - C#, NUnit - browser can create files in sandbox/ sub-dirs - feature_sandbox_sub_dir_test.rb:12
1.8040 - D8D12A - Ubuntu - VisualBasic, NUnit - browser can create files in sandbox/ sub-dirs - feature_sandbox_sub_dir_test.rb:12
1.8006 - D8D12C - Alpine - C#, NUnit - cyber-dojo.sh can delete files from sandbox/ sub-dir - feature_sandbox_sub_dir_test.rb:29
1.7648 - D8D12B - Ubuntu - VisualBasic, NUnit - cyber-dojo.sh can create files in sandbox/ sub-dirs - feature_sandbox_sub_dir_test.rb:21
1.7460 - D8D12C - Ubuntu - VisualBasic, NUnit - cyber-dojo.sh can delete files from sandbox/ sub-dir - feature_sandbox_sub_dir_test.rb:29
1.1345 - D06AB5 - Debian - C (gcc), assert - run_cyber_dojo_sh with no logging - rack_dispatcher_test.rb:147
1.1113 - D06SA2 - Debian - C (gcc), assert - run_cyber_dojo_sh with new args (no logging) - rack_dispatcher_test.rb:134
1.0402 - 6698A2 - Alpine - C#, NUnit - os-image correspondence - os_test.rb:13   
1.0143 - 6698A2 - Ubuntu - VisualBasic, NUnit - os-image correspondence - os_test.rb:13
0.9169 - 3A8D98 - Alpine - C#, NUnit - multiple container properties - feature_container_properties_test.rb:22
0.9158 - ECF533 - Alpine - C#, NUnit - single-char new text files are detected - feature_returned_text_files_test.rb:119
0.8959 - 3A8D98 - Ubuntu - VisualBasic, NUnit - multiple container properties - feature_container_properties_test.rb:22


                 failures |       0   <=     0 | [32m true [0m
                   errors |       0   <=     0 | [32m true [0m
                 warnings |       0   <=     0 | [32m true [0m
                    skips |       0   <=     0 | [32m true [0m
        duration(test)[s] |    82.5   <=   200 | [32m true [0m
                    tests |     120   >=     1 | [32m true [0m
      coverage(tested)[%] |   100.0   >=   100 | [32m true [0m
      coverage(tester)[%] |   98.98   >=    98 | [32m true [0m
     lines(tester/tested) |    2.41   >=   2.2 | [32m true [0m
      hits(tested/tester) |    0.92   >=   0.7 | [32m true [0m


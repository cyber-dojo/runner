Run options: --seed 51998

# Running:

.........................................................................................................................

Finished in 94.284598s, 1.2833 runs/s, 250.6666 assertions/s.

121 runs, 23634 assertions, 0 failures, 0 errors, 0 skips
Coverage report generated for MiniTest to //tmp/reports. 6902 / 13545 LOC (50.96%) covered.

Slowest 25 tests are...
7.9791 - 7B79DB - Alpine - C#, NUnit - red/amber/green traffic-light, no diagnostics - feature_traffic_light_test.rb:29
6.9335 - 1598A6 - Ubuntu - VisualBasic, NUnit - baseline average speed is less than 1.7 secs, locally much faster than that, but for CI 1.7 is about right - feature_baseline_speed_test.rb:12
5.6058 - 7B79DB - Ubuntu - VisualBasic, NUnit - red/amber/green traffic-light, no diagnostics - feature_traffic_light_test.rb:29
4.8659 - 1598A6 - Alpine - C#, NUnit - baseline average speed is less than 1.7 secs, locally much faster than that, but for CI 1.7 is about right - feature_baseline_speed_test.rb:12
3.6560 - 7B7Hd7 - Alpine - C#, NUnit - return colour in outermost JSON till clients upgrade - feature_traffic_light_test.rb:20
3.4816 - 1B5CD5 - Debian - C (gcc), assert - fork-bomb does not run indefinitely - feature_robustness_test.rb:12
3.1084 - 9E94D7 - Debian - C (gcc), assert - when run_cyber_dojo_sh does not complete in max_seconds (not producing output) - feature_timed_out_test.rb:38
3.0566 - 6f2dFA - Alpine - C#, NUnit - log_empty? helper method ignores known circleci warning - log_empty_test.rb:12
3.0164 - 9E9B2B - Debian - C (gcc), assert - when run_cyber_dojo_sh does not complete in max_seconds (producing output) - feature_timed_out_test.rb:12
2.9376 - 1B5CD6 - Alpine - C#, NUnit - bash fork-bomb does not run indefinitely - feature_robustness_test.rb:46
2.8922 - 1B5CD6 - Ubuntu - VisualBasic, NUnit - bash fork-bomb does not run indefinitely - feature_robustness_test.rb:46
2.8142 - E4A52B - Alpine - C#, NUnit - source files bigger than 10K are not truncated - feature_large_file_truncation_test.rb:28
2.4800 - 1B5DB3 - Debian - C (gcc), assert - file-handles quickly become exhausted - feature_robustness_test.rb:74
2.0574 - D280BB - Ubuntu - C (clang), assert - clang sanitize address => no ulimit on data - feature_clang_sanitize_address_test.rb:12
1.8219 - D8D12C - Alpine - C#, NUnit - cyber-dojo.sh can delete files from sandbox/ sub-dir - feature_sandbox_sub_dir_test.rb:29
1.8015 - D8D12B - Alpine - C#, NUnit - cyber-dojo.sh can create files in sandbox/ sub-dirs - feature_sandbox_sub_dir_test.rb:21
1.7936 - D8D12B - Ubuntu - VisualBasic, NUnit - cyber-dojo.sh can create files in sandbox/ sub-dirs - feature_sandbox_sub_dir_test.rb:21
1.7860 - D8D12C - Ubuntu - VisualBasic, NUnit - cyber-dojo.sh can delete files from sandbox/ sub-dir - feature_sandbox_sub_dir_test.rb:29
1.7827 - D8D12A - Alpine - C#, NUnit - browser can create files in sandbox/ sub-dirs - feature_sandbox_sub_dir_test.rb:12
1.7608 - D8D12A - Ubuntu - VisualBasic, NUnit - browser can create files in sandbox/ sub-dirs - feature_sandbox_sub_dir_test.rb:12
1.7600 - ECF530 - Alpine - C#, NUnit - deleted files are detected - feature_returned_text_files_test.rb:78
1.5239 - ECF529 - Alpine - C#, NUnit - text files created in sub-dirs are returned - feature_returned_text_files_test.rb:60
1.3981 - D06SA2 - Debian - C (gcc), assert - run_cyber_dojo_sh with new args (no logging) - rack_dispatcher_test.rb:134
1.2379 - ECF62C - Ubuntu - VisualBasic, NUnit - no text files under /sandbox at all, returns everything deleted - feature_returned_text_files_test.rb:134
1.1829 - D06AB5 - Debian - C (gcc), assert - run_cyber_dojo_sh with no logging - rack_dispatcher_test.rb:147
1.0401 - 7B7p3W - Ubuntu - VisualBasic, NUnit - stdout is not being whitespace stripped - feature_traffic_light_test.rb:12


                 failures |       0   <=     0 | [32m true [0m
                   errors |       0   <=     0 | [32m true [0m
                 warnings |       0   <=     0 | [32m true [0m
                    skips |       0   <=     0 | [32m true [0m
        duration(test)[s] |   94.28   <=   200 | [32m true [0m
                    tests |     121   >=     1 | [32m true [0m
      coverage(tested)[%] |   100.0   >=   100 | [32m true [0m
      coverage(tester)[%] |   98.99   >=    98 | [32m true [0m
     lines(tester/tested) |    2.42   >=   2.2 | [32m true [0m
      hits(tested/tester) |    0.93   >=   0.7 | [32m true [0m


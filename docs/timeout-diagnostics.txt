
Gather docker logs and sent back to the browser as third 'stream' == log
Note:
pid,status = Process.wait2(pid, Process::WNOHANG)
# raises a SystemCallError if there are no child processes

  def add_docker_log(log)
    so,se,st = shell.exec("docker logs --tail=1000 #{container_name}")
    log.merge!{ stdout:so, stderr:se, status:st }
  end

  log = { image_name:@image_name, id:@id }
  pid = Process.spawn(command, {
    pgroup:true,     # become process leader
        in:r_stdin,  # redirection
       out:w_stdout, # redirection
       err:w_stderr  # redirection
  })
  begin
    Timeout::timeout(max_seconds) do
      _, ps = Process.waitpid2(pid)
      add_docker_log(log)
      timed_out = false
      status = ps.exitstatus
    end
  rescue Timeout::Error
    add_docker_log(log)
    Process_kill_group(pid)
    Process_detach(pid)
    timed_out = true
    status = KILLED_STATUS
  ensure
    w_stdout.close unless w_stdout.closed?
    w_stderr.close unless w_stderr.closed?
    stdout = packaged(read_max(r_stdout))
    stderr = packaged(read_max(r_stderr))
    r_stdout.close
    r_stderr.close
  end
  @result['run_cyber_dojo_sh'] = {
    stdout:stdout,
    stderr:stderr,
    status:status,
    timed_out:timed_out,
    log:log,
  }

version: 2
jobs:
  build-tag-publish:

    machine:
      enabled: true

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: Prepull images to avoid pulls happening in speed tests
          command: |
            set -e
            docker pull cyberdojofoundation/gcc_assert
            docker pull cyberdojofoundation/csharp_nunit
            docker pull cyberdojofoundation/python_pytest
            docker pull cyberdojofoundation/clang_assert
            docker pull cyberdojofoundation/perl_test_simple
      - run:
          name: Build tested docker image
          command: |
            set -e
            ./pipe_build_up_test.sh
      - run:
          name: Tag docker image
          command: |
            set -e
            TAG=tag-image.sh
            curl -O --fail ${CIRCLECI_SCRIPT_DIR}/${TAG}
            chmod 700 ./${TAG}
            ./${TAG}
      - run:
          name: Publish tagged docker image on dockerhub
          command: |
            set -e
            PUBLISH=publish-tagged-image.sh
            curl -O --fail ${CIRCLECI_SCRIPT_DIR}/${PUBLISH}
            chmod 700 ./${PUBLISH}
            echo "${DOCKER_PASS}" | docker login -u "${DOCKER_USER}" --password-stdin            
            ./${PUBLISH}
      - run:
          name: Trigger dependent repos
          command: |
            set -e
            TRIGGER=trigger-dependent-repos.sh
            curl -O --fail ${CIRCLECI_SCRIPT_DIR}/${TRIGGER}
            chmod 700 ./${TRIGGER}
            # ./${TRIGGER} web # off till authentication done.

  deploy-to-beta:
    docker:
      - image: cyberdojo/gcloud-kubectl-helm
    steps:
      - run:
          name: authenticate with gcloud and deploy with helm
          command: |
            set -e
            echo $GCP_K8S_CREDENTIALS > /gcp/gcp-credentials.json
            gcloud auth activate-service-account "$SERVICE_ACCOUNT" --key-file=/gcp/gcp-credentials.json
            gcloud container clusters get-credentials "$CLUSTER" --zone "$ZONE" --project "$PROJECT"
            helm init --client-only
            helm repo add praqma https://praqma-helm-repo.s3.amazonaws.com/
            #helm upgrade --install --namespace=beta --set-string image.runner.tag=${CIRCLE_SHA1:0:7} beta-cyber-dojo praqma/cyber-dojo

workflows:
  version: 2
  build-tag-publish-deploy:
    jobs:
      - build-tag-publish:
          context: cyberdojo-context
          filters:
            branches:
              only:
                  - master
      - deploy-to-beta:
          context: cyberdojo-context
          requires:
            - build-tag-publish

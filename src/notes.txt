
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
STATEFUL RUNNER
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Test run times for C++ catch are very very slow.
It would be nice to make this faster.
Which means the stateful runner again.
I don't need to keep two lots of files in the browser.
Instead, the stateful runner can
- tar pipe files out of the volume-mount
- compare visible-files against those
- only write changes files to /tmp
- tar pipe /tmp into the container
- Note: all the above may not actually be necessary for catch
Plus...
- collector will need to be restored (its in cyber-dojo-retired org)
- cron can run it daily...
- runner-stateful will need restoring (its in cyber-dojo-retired org)
- start-point manifest will need to re-introduce optional runner: setting.

How to limit the size of a docker volume?
https://stackoverflow.com/questions/52089499/create-docker-volume-with-limited-size
https://stackoverflow.com/questions/40494536/how-specify-the-size-of-a-shared-docker-volume/40499023#40499023


Trying to use a non root user (called runner) when running the container...
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Problem. Need permission to run /var/run/docker.sock
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

On DockerToolbox for Mac, on the default VM
/etc/group has docker group with gid=100
This means /var/run/docker.sock has a gid=100
On an Alpine image (such as this), /etc/group
has a group called users with gid=100
So I just need to make my runner user a member of users!

Obvious problem with this is that the docker group
has different gids on different OS's.
For example, on Ubuntu 16.04 (in Google Computer Engine)
/etc/group also has a group called users with gid=100
but its docker group has a gid of 999
I can hack-solve that by making the user a member
of _multiple_ groups, each of which has the gid for
docker on a particular OS

RUN adduser runner users
